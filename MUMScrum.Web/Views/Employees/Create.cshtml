@model MUMScrum.Model.Employee

@{
    ViewBag.Title = "Add Employee";
}
<p style="float: right">
    <button class="btn btn-small float-right" onclick="location.href='/Employees';">Back</button>
</p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row-fluid sortable">
        <div class="box span12">
            <div class="box-header" data-original-title>
                <h2><i class="halflings-icon edit"></i><span class="break"></span>Create an Employee</h2>
            </div>
            <div class="box-content">
                <div class="form-horizontal">
                    <fieldset>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger", @for = "inputError" })
                        <div class="control-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="controls">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger error", @for = "inputError" })
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="controls">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger error", @for = "inputError" })
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.RoleId, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="controls">
                                @Html.DropDownList("RoleId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger error", @for = "inputError" })
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="controls">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger error", @for = "inputError" })
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger error", @for = "inputError" })
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.IsDeactivated, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="controls">
                                @Html.EditorFor(model => model.IsDeactivated)
                                @Html.ValidationMessageFor(model => model.IsDeactivated, "", new { @class = "text-danger error", @for = "inputError" })
                            </div>
                        </div>

                        <div class="form-actions">
                            <button type="submit" class="btn btn-primary">Save changes</button>
                            <button class="btn" onclick="location.href='/Employees';">Cancel</button>
                        </div>
                    </fieldset>
                </div>
            </div>
        </div><!--/span-->
    </div><!--/row-->
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script type="text/javascript">
        $('#EmployeesMenu').addClass('active')
        $('#BreadCrumMenu').html('Employees')
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
